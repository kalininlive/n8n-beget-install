#!/bin/bash
set -e

# –ü–∞–ø–∫–∏ –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
BACKUP_DIR="/opt/n8n-install/backups"
mkdir -p "$BACKUP_DIR"
NOW=$(date +"%Y-%m-%d-%H-%M")
ARCHIVE_NAME="backup-$NOW.zip"
ARCHIVE_PATH="$BACKUP_DIR/$ARCHIVE_NAME"

BASE_DIR="/opt/n8n-install"
ENV_FILE="$BASE_DIR/.env"
EXPORT_FILE="$BASE_DIR/n8n_workflows.json"
SQL_FILE="$BASE_DIR/db.sql"

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
source "$ENV_FILE"
BOT_TOKEN="$TG_BOT_TOKEN"
USER_ID="$TG_USER_ID"

# 1. –≠–∫—Å–ø–æ—Ä—Ç workflows
echo "üì§ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º workflows..."
docker exec n8n n8n export:workflow --output=/data/export.json
docker cp n8n:/data/export.json "$EXPORT_FILE"

# 2. –ö–ª—é—á —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
echo "$N8N_ENCRYPTION_KEY" > "$BASE_DIR/encryption_key.txt"

# 3. –ë—ç–∫–∞–ø –±–∞–∑—ã
docker exec -e PGPASSWORD=$POSTGRES_PASSWORD postgres pg_dump -U postgres -F p > "$SQL_FILE"

# 4. –ê—Ä—Ö–∏–≤–∏—Ä—É–µ–º
zip -j "$ARCHIVE_PATH" "$EXPORT_FILE" "$BASE_DIR/encryption_key.txt" "$ENV_FILE" "$SQL_FILE"

# 5. –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
echo "üì® –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—Ä—Ö–∏–≤ –≤ Telegram..."
curl -s -F document=@"$ARCHIVE_PATH" "https://api.telegram.org/bot$BOT_TOKEN/sendDocument?chat_id=$USER_ID&caption=üì¶ –ë—ç–∫–∞–ø n8n: $NOW"

# 6. –û—á–∏—Å—Ç–∫–∞
rm -f "$EXPORT_FILE" "$BASE_DIR/encryption_key.txt" "$SQL_FILE" "$ARCHIVE_PATH"

echo "‚úÖ –ë—ç–∫–∞–ø –∑–∞–≤–µ—Ä—à—ë–Ω –∏ —É–¥–∞–ª—ë–Ω –ª–æ–∫–∞–ª—å–Ω–æ."
