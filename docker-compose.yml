version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    restart: always
    container_name: n8n-postgres
    networks:
      - n8n
    volumes:
      - n8n_db_storage:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: n8n

  redis:
    image: redis:7-alpine
    restart: always
    container_name: n8n-redis
    networks:
      - n8n
    volumes:
      - n8n_redis_storage:/data

  traefik:
    image: traefik:2.10.4
    restart: always
    container_name: n8n-traefik
    networks:
      - n8n
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik_data/acme.json:/acme.json
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.le.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.le.acme.email=${EMAIL}"
      - "--certificatesresolvers.le.acme.storage=/acme.json"

  n8n:
    build:
      context: .
      dockerfile: Dockerfile.n8n
    container_name: n8n-app
    restart: always
    networks:
      - n8n
    volumes:
      - ./static:/static
      - ./n8n_data/files:/files
      - ./n8n_data/tmp:/tmp
      - ./n8n_data/backups:/backups
    environment:
      - N8N_BASIC_AUTH_ACTIVE=false
      - N8N_PROTOCOL=https
      - N8N_HOST=${DOMAIN}
      - WEBHOOK_URL=https://${DOMAIN}/
      - NODE_ENV=production
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=user
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - GENERIC_TIMEZONE=Europe/Amsterdam
      - QUEUE_BULL_REDIS_HOST=redis
      - EXECUTIONS_DATA_PRUNE=true
      - EXECUTIONS_DATA_MAX_AGE=168
      - N8N_DEFAULT_BINARY_DATA_MODE=filesystem

networks:
  n8n:

volumes:
  n8n_db_storage:
  n8n_redis_storage:
