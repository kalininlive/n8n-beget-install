#!/bin/bash

# === –ó–∞—â–∏—Ç–∞: –∑–∞–ø—Ä–µ—â–∞–µ–º –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ —Ç–µ—Ä–º–∏–Ω–∞–ª ===
if [[ -t 1 ]]; then
  echo "üö´ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ Telegram-–±–æ—Ç–∞, –∞ –Ω–µ –Ω–∞–ø—Ä—è–º—É—é –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ."
  exit 1
fi

# === –ü–æ–¥–∫–ª—é—á–∞–µ–º .env ===
set -a
source /opt/n8n-install/.env
set +a

# === –û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ===
LOG="/opt/n8n-install/logs/update.log"
TG_URL="https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMessage"

function notify() {
  local text="$1"
  curl -s -X POST "$TG_URL" \
    -d chat_id="$TG_USER_ID" \
    -d parse_mode="Markdown" \
    -d text="$text"
}

# === –ü–µ—Ä–µ—Ö–≤–∞—Ç –æ—à–∏–±–æ–∫ ===
trap 'notify "‚ùå *–û–®–ò–ë–ö–ê –≤–æ –≤—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è!* –°–º. –ª–æ–≥ –≤ `/opt/n8n-install/logs/update.log`"' ERR

# === –ù–∞—á–∞–ª–æ ===
exec > >(tee -a "$LOG") 2>&1
echo -e "\nüü° update_n8n.sh –Ω–∞—á–∞–ª—Å—è: $(date)"
notify "üõ† *–ù–∞—á–∏–Ω–∞—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ n8n...*"

set -e
BASE_DIR="/opt/n8n-install"
cd "$BASE_DIR"

# === –®–∞–≥ 1. –ë—ç–∫–∞–ø ===
echo "üîÑ –®–∞–≥ 1: —Å–æ–∑–¥–∞—é –±—ç–∫–∞–ø..."
notify "üì¶ *–®–∞–≥ 1:* —Å–æ–∑–¥–∞—é –±—ç–∫–∞–ø..."
bash "$BASE_DIR/backup_n8n.sh"

# === –®–∞–≥ 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–π ===
echo "üîç –®–∞–≥ 2: –ø—Ä–æ–≤–µ—Ä—è—é –≤–µ—Ä—Å–∏–∏ n8n..."
CURRENT=$(docker exec n8n-app n8n --version)
LATEST=$(curl -s https://api.github.com/repos/n8n-io/n8n/releases/latest | grep '"tag_name":' | cut -d '"' -f 4)

if [ "$CURRENT" = "$LATEST" ]; then
  echo "‚úÖ –£ –≤–∞—Å —É–∂–µ –ø–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è n8n: $CURRENT"
  notify "‚úÖ *–£–∂–µ –ø–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è:* $CURRENT"
    exit 0
fi

echo "üÜï –î–æ—Å—Ç—É–ø–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è: $LATEST (—É –≤–∞—Å: $CURRENT)"
notify "üîÅ *–û–±–Ω–æ–≤–ª—è—é —Å –≤–µ—Ä—Å–∏–∏ $CURRENT –¥–æ $LATEST...*"

# === –®–∞–≥ 3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ ===
echo "üì¶ –®–∞–≥ 3: –æ–±–Ω–æ–≤–ª—è—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä n8n..."
docker compose stop n8n
docker compose rm -f n8n
docker compose build --no-cache n8n
docker compose up -d n8n

# === –®–∞–≥ 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ ===
echo "ü©∫ –®–∞–≥ 4: –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
sleep 5
docker ps | grep n8n

# === –®–∞–≥ 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ ===
echo "üîé –®–∞–≥ 5: –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª—ë–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏..."
NEW_VERSION=$(docker exec n8n-app n8n --version)
echo "üÜó –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è: $NEW_VERSION"

# === –®–∞–≥ 6. –û—á–∏—Å—Ç–∫–∞ ===
echo "üßπ –®–∞–≥ 6: –Ω–∞—á–∏–Ω–∞—é –æ—á–∏—Å—Ç–∫—É —Å–∏—Å—Ç–µ–º—ã..."
notify "üßπ *–®–∞–≥ 6:* –æ—á–∏—â–∞—é —Å–∏—Å—Ç–µ–º—É –æ—Ç –º—É—Å–æ—Ä–∞..."

apt-get clean
apt-get autoremove --purge -y
journalctl --vacuum-size=100M
journalctl --vacuum-time=7d
find /var/log -type f -name "*.gz" -delete
find /var/log -type f -name "*.log" -exec truncate -s 0 {} \;
find /var/lib/docker/containers/ -type f -name "*-json.log" -exec truncate -s 0 {} \;
systemctl restart docker
docker image prune -f
docker builder prune -f
docker image prune -a -f
docker container prune -f
docker volume prune -f

docker system df
df -h | sed -n '1,5p'

# === –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ ===
echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω—ã! ($(date))"
notify "‚úÖ *–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!*\n–¢–µ–ø–µ—Ä—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤–µ—Ä—Å–∏—è: *$NEW_VERSION*"
