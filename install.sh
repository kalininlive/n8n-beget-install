#!/usr/bin/env bash
set -euo pipefail

echo "=== üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ n8n —Å Telegram-–±–æ—Ç–æ–º ==="

# 1) –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∏ Docker Compose
echo "‚Üí –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
sudo apt update
sudo apt install -y ca-certificates curl gnupg lsb-release

sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | \
  sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

echo \
"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \
https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | \
sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

sudo apt update
sudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
if ! docker compose version &>/dev/null; then
  echo "‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –ü—Ä–µ—Ä–≤–∞–Ω–æ."
  exit 1
fi

# 2) –ó–∞–ø—Ä–æ—Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ .env
if [ -f .env ]; then
  echo "‚Üí –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ .env"
  source .env
else
  read -p "–î–æ–º–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä n8n.example.com): " DOMAIN
  read -p "Email (–¥–ª—è SSL): " EMAIL
  read -p "Telegram bot token: " TG_BOT_TOKEN
  read -p "–í–∞—à Telegram ID: " TG_USER_ID
  read -p "–ü–∞—Ä–æ–ª—å –æ—Ç Postgres: " POSTGRES_PASSWORD
  N8N_ENCRYPTION_KEY=$(uuidgen)
  echo "‚Üí –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∫–ª—é—á: $N8N_ENCRYPTION_KEY"

  cat <<EOF > .env
DOMAIN=$DOMAIN
EMAIL=$EMAIL
TG_BOT_TOKEN=$TG_BOT_TOKEN
TG_USER_ID=$TG_USER_ID
POSTGRES_PASSWORD=$POSTGRES_PASSWORD
N8N_ENCRYPTION_KEY=$N8N_ENCRYPTION_KEY
EOF
fi

# 3) –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
echo "‚Üí –°–æ–∑–¥–∞—ë–º —Ä–∞–±–æ—á–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..."
mkdir -p n8n_data/{files,tmp,backups}
mkdir -p traefik_data
mkdir -p static
mkdir -p cron
touch traefik_data/acme.json
chmod 600 traefik_data/acme.json

# 4) –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js –∏ PM2
echo "‚Üí –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js –∏ PM2..."
sudo apt install -y nodejs npm
npm install -g pm2
cd bot && npm install && cd ..

# 5) –ó–∞–ø—É—Å–∫ Docker Compose
echo "‚Üí –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã n8n —á–µ—Ä–µ–∑ docker-compose..."
docker compose up -d --build

# 6) –ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞ —á–µ—Ä–µ–∑ PM2
echo "‚Üí –ó–∞–ø—É—Å–∫–∞–µ–º Telegram-–±–æ—Ç–∞..."
pm2 start bot/bot.js --name n8n-bot
pm2 save
pm2 startup systemd
sudo env PATH=$PATH:/usr/bin pm2 startup systemd -u root --hp /root

# 7) –ù–∞—Å—Ç—Ä–æ–π–∫–∞ cron-–∑–∞–¥–∞—á–∏
echo "‚Üí –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º cron –¥–ª—è –∞–≤—Ç–æ-–±—ç–∫–∞–ø–æ–≤..."
cp backup_n8n.sh cron/backup_n8n.sh
chmod +x cron/backup_n8n.sh

cat <<EOF > cron/.env
TG_BOT_TOKEN=$TG_BOT_TOKEN
TG_USER_ID=$TG_USER_ID
DOMAIN=$DOMAIN
EOF

(crontab -l 2>/dev/null; echo "0 3 * * * /opt/n8n-install/cron/backup_n8n.sh") | crontab -

# 8) Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
echo "‚Üí –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram..."
curl -s -X POST https://api.telegram.org/bot$TG_BOT_TOKEN/sendMessage \
  -d chat_id=$TG_USER_ID \
  --data-urlencode "text=‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ n8n –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\nüîó https://$DOMAIN"

echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –û—Ç–∫—Ä–æ–π: https://$DOMAIN"
