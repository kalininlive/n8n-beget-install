#!/bin/bash
set -e

### 0. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤
if (( EUID != 0 )); then
  echo "‚ùó –°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω –æ—Ç root: sudo ./install.sh"
  exit 1
fi

clear
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ n8n + Telegram-–±–æ—Ç–∞ + –∞–≤—Ç–æ-–±—ç–∫–∞–ø–∞"
echo "---------------------------------------------"

### 1. –í–≤–æ–¥ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
read -p "üåê –í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω –¥–ª—è n8n (–Ω–∞–ø—Ä–∏–º–µ—Ä: n8n.example.com): " DOMAIN
read -p "ü§ñ –í–≤–µ–¥–∏—Ç–µ Telegram Bot Token: " TG_BOT_TOKEN
read -p "üë§ –í–≤–µ–¥–∏—Ç–µ Telegram User ID: " TG_USER_ID

BASE="/opt/n8n-install"

### 2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "‚Üí –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
apt update
apt install -y curl git ufw nodejs npm

### 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker/Compose
echo "‚Üí –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker..."
if ! command -v docker &>/dev/null; then
  echo "‚Üí Docker –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
  curl -fsSL https://get.docker.com | sh
fi

echo "‚Üí –ó–∞–ø—É—Å–∫–∞–µ–º —Å–ª—É–∂–±—É Docker..."
systemctl enable docker 2>/dev/null || true
systemctl start docker 2>/dev/null || true

if ! docker info &>/dev/null; then
  echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Docker daemon"
  exit 1
fi

if docker compose version &>/dev/null; then
  COMPOSE_CMD="docker compose"
elif command -v docker-compose &>/dev/null; then
  COMPOSE_CMD="docker-compose"
else
  echo "‚Üí –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º docker-compose –ø–ª–∞–≥–∏–Ω..."
  apt install -y docker-compose-plugin docker-compose
  COMPOSE_CMD="docker compose"
fi

echo "‚Üí –ò—Å–ø–æ–ª—å–∑—É–µ–º: $COMPOSE_CMD"

### 4. –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "‚Üí –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ n8n..."
$COMPOSE_CMD build
$COMPOSE_CMD up -d

### 5. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∑–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞
echo "‚Üí –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º Telegram-–±–æ—Ç–∞..."
npm install -g pm2
cd "$BASE/bot"
npm install
pm2 start bot.js --name n8n-bot --env TG_BOT_TOKEN="$TG_BOT_TOKEN" --env TG_USER_ID="$TG_USER_ID"
pm2 save
pm2 startup systemd -u root --hp /root

### 6. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ-–±—ç–∫–∞–ø–∞ —á–µ—Ä–µ–∑ cron
echo "‚Üí –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º cron –¥–ª—è –∞–≤—Ç–æ-–±—ç–∫–∞–ø–æ–≤..."
cp "$BASE/backup_n8n.sh" "$BASE/cron/backup_n8n.sh"
chmod +x "$BASE/cron/backup_n8n.sh"
echo "TG_BOT_TOKEN=\"$TG_BOT_TOKEN\"" > "$BASE/cron/.env"
echo "TG_USER_ID=\"$TG_USER_ID\"" >> "$BASE/cron/.env"
(crontab -l 2>/dev/null; echo "0 3 * * * $BASE/cron/backup_n8n.sh") | crontab - || echo "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å cron-–∑–∞–¥–∞—á—É"

### 7. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫ –∏ –≤–µ—Ä—Å–∏–π
echo "üì¶ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–µ—Ä—Å–∏–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫..."
mkdir -p "$BASE/n8n_data/backups"
docker exec -u 0 n8n-app apk info | sort > "$BASE/n8n_data/backups/n8n_installed_apk.txt" || true
docker exec -u 0 n8n-app /venv/bin/pip list > "$BASE/n8n_data/backups/n8n_installed_pip.txt" || true
{
  echo -n "yt-dlp: "; docker exec -u 0 n8n-app yt-dlp --version
  echo -n "ffmpeg: "; docker exec -u 0 n8n-app ffmpeg -version | head -n 1
  echo -n "python3: "; docker exec -u 0 n8n-app python3 --version
} > "$BASE/n8n_data/backups/n8n_versions.txt" || true

VERSIONS=$(cat "$BASE/n8n_data/backups/n8n_versions.txt")

curl -s -X POST https://api.telegram.org/bot$TG_BOT_TOKEN/sendMessage \
     -d chat_id=$TG_USER_ID \
     --data-urlencode "text=‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\nüìÑ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏:\n$VERSIONS\n\nüïí –ê–≤—Ç–æ–±—ç–∫–∞–ø: 03:00 –∫–∞–∂–¥—ã–π –¥–µ–Ω—å\nüåê –ü–∞–Ω–µ–ª—å: https://$DOMAIN"

### 8. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ https://$DOMAIN"
echo "üü¢ Telegram-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É"
echo "üïí Cron –∑–∞–¥–∞—á–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –Ω–∞ 03:00"
echo "üì¶ –í–µ—Ä—Å–∏–∏ –ø–∞–∫–µ—Ç–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ $BASE/n8n_data/backups/"
