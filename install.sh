#!/bin/bash

set -e

### 1. –í–≤–æ–¥ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

clear
echo "=== üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ n8n —Å Telegram-–±–æ—Ç–æ–º ==="
read -p "–í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä n8n.example.com): " DOMAIN
read -p "–í–≤–µ–¥–∏—Ç–µ email (–¥–ª—è SSL): " EMAIL
read -p "–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞: " TG_BOT_TOKEN
read -p "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Telegram ID: " TG_USER_ID
read -p "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –æ—Ç Postgres: " DB_PASSWORD

UUID=$(cat /proc/sys/kernel/random/uuid)
echo "‚Üí –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∫–ª—é—á —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è: $UUID"

### 2. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π

BASE="/opt/n8n-install"
mkdir -p "$BASE/n8n_data" "$BASE/traefik_data" "$BASE/cron"
chmod 600 "$BASE/traefik_data/acme.json" 2>/dev/null || touch "$BASE/traefik_data/acme.json" && chmod 600 "$BASE/traefik_data/acme.json"

### 3. –°–æ–∑–¥–∞–Ω–∏–µ .env
cat <<EOF > .env
DOMAIN=$DOMAIN
EMAIL=$EMAIL
TG_BOT_TOKEN=$TG_BOT_TOKEN
TG_USER_ID=$TG_USER_ID
DB_PASSWORD=$DB_PASSWORD
ENCRYPTION_KEY=$UUID
EOF

### 4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

echo "‚Üí –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
sudo apt update
sudo apt install -y curl git ufw nodejs npm

### 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
if ! docker compose version &>/dev/null; then
  echo "‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –≤—Ä—É—á–Ω—É—é: https://docs.docker.com/engine/install/ubuntu/"
  exit 1
fi

### 6. –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤

echo "‚Üí –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ n8n..."
docker compose build

echo "‚Üí –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker compose up -d

### 7. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∑–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞

echo "‚Üí –ó–∞–ø—É—Å–∫–∞–µ–º Telegram-–±–æ—Ç–∞..."
npm install -g pm2
pm install
pm install node-telegram-bot-api
pm install archiver
pm install axios
pm install winston

pm2 start bot/bot.js --name n8n-bot
pm2 save
pm2 startup systemd -u root --hp /root

### 8. –ö—Ä–æ–Ω –∑–∞–¥–∞—á–∞ –¥–ª—è –±—ç–∫–∞–ø–∞

echo "‚Üí –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º cron –¥–ª—è –∞–≤—Ç–æ-–±—ç–∫–∞–ø–æ–≤..."
cp "$BASE/backup_n8n.sh" "$BASE/cron/backup_n8n.sh"
chmod +x "$BASE/cron/backup_n8n.sh"
echo "TG_BOT_TOKEN=\"$TG_BOT_TOKEN\"" > "$BASE/cron/.env"
echo "TG_USER_ID=\"$TG_USER_ID\"" >> "$BASE/cron/.env"

(crontab -l 2>/dev/null; echo "0 3 * * * $BASE/cron/backup_n8n.sh") | crontab - || echo "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å cron-–∑–∞–¥–∞—á—É"

### 9. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫ –∏ –≤–µ—Ä—Å–∏–π

echo "üì¶ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ø–∏—Å–∫–∏ –ø–∞–∫–µ—Ç–æ–≤..."
docker exec -u 0 n8n-app apk info | sort > "$BASE/n8n_data/backups/n8n_installed_apk.txt" || true
docker exec -u 0 n8n-app /venv/bin/pip list > "$BASE/n8n_data/backups/n8n_installed_pip.txt" || true
{
  echo -n "yt-dlp: "; docker exec -u 0 n8n-app yt-dlp --version
  echo -n "ffmpeg: "; docker exec -u 0 n8n-app ffmpeg -version | head -n 1
  echo -n "python3: "; docker exec -u 0 n8n-app python3 --version
} > "$BASE/n8n_data/backups/n8n_versions.txt" || true

VERSIONS=$(cat "$BASE/n8n_data/backups/n8n_versions.txt")

curl -s -X POST https://api.telegram.org/bot$TG_BOT_TOKEN/sendMessage \
     -d chat_id=$TG_USER_ID \
     --data-urlencode "text=‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\nüìÑ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏:\n$VERSIONS\n\nüïí –ê–≤—Ç–æ–±—ç–∫–∞–ø: 03:00 –∫–∞–∂–¥—ã–π –¥–µ–Ω—å (–µ—Å–ª–∏ cron –¥–æ–±–∞–≤–ª–µ–Ω)\nüåê –ü–∞–Ω–µ–ª—å: https://$DOMAIN"

### 10. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ

echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ https://$DOMAIN –≤ –±—Ä–∞—É–∑–µ—Ä–µ."
echo "üü¢ Telegram-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É"
echo "üïí Cron –∑–∞–¥–∞—á–∞: –±—ç–∫–∞–ø –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 03:00"
echo "üì¶ –°–ø–∏—Å–∫–∏ –ø–∞–∫–µ—Ç–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ $BASE/n8n_data/backups/"
