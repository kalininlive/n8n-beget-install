#!/bin/bash
set -e

### 0. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤
if (( EUID != 0 )); then
  echo "‚ùó –°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω –æ—Ç root: sudo ./install.sh"
  exit 1
fi

### 1. –í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
clear
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ n8n + Telegram-–±–æ—Ç–∞ + SSL + Traefik"
echo "---------------------------------------------"

read -p "üåê –í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω –¥–ª—è n8n (–Ω–∞–ø—Ä–∏–º–µ—Ä: n8n.example.com): " DOMAIN
read -p "üìß –í–≤–µ–¥–∏—Ç–µ email –¥–ª—è SSL (Let's Encrypt): " EMAIL
read -p "üîê –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Postgres: " POSTGRES_PASSWORD
read -p "ü§ñ –í–≤–µ–¥–∏—Ç–µ Telegram Bot Token: " TG_BOT_TOKEN
read -p "üë§ –í–≤–µ–¥–∏—Ç–µ Telegram User ID: " TG_USER_ID

ENCRYPTION_KEY=$(openssl rand -base64 32)

echo ""
echo "‚úÖ –í–≤–µ–¥—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:"
echo "–î–æ–º–µ–Ω:              $DOMAIN"
echo "Email (SSL):        $EMAIL"
echo "Postgres –ø–∞—Ä–æ–ª—å:    $POSTGRES_PASSWORD"
echo "ENCRYPTION_KEY:     $ENCRYPTION_KEY"
echo "TG Bot Token:       $TG_BOT_TOKEN"
echo "TG User ID:         $TG_USER_ID"

### 2. –°–æ—Ö—Ä–∞–Ω—è–µ–º .env
cat > .env <<EOF
DOMAIN=$DOMAIN
EMAIL=$EMAIL
POSTGRES_PASSWORD=$POSTGRES_PASSWORD
ENCRYPTION_KEY=$ENCRYPTION_KEY
TG_BOT_TOKEN=$TG_BOT_TOKEN
TG_USER_ID=$TG_USER_ID
EOF

### 3. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "‚Üí –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
apt update
apt install -y curl git ufw nodejs npm

### 4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∏ Compose
if ! command -v docker &>/dev/null; then
  echo "‚Üí Docker –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
  curl -fsSL https://get.docker.com | sh
fi

echo "‚Üí –ó–∞–ø—É—Å–∫–∞–µ–º Docker..."
systemctl enable docker
systemctl start docker

if ! docker info &>/dev/null; then
  echo "‚ùå Docker daemon –Ω–µ –∑–∞–ø—É—â–µ–Ω"
  exit 1
fi

if docker compose version &>/dev/null; then
  COMPOSE_CMD="docker compose"
elif command -v docker-compose &>/dev/null; then
  COMPOSE_CMD="docker-compose"
else
  echo "‚Üí –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º docker-compose –ø–ª–∞–≥–∏–Ω..."
  apt install -y docker-compose-plugin docker-compose
  COMPOSE_CMD="docker compose"
fi

echo "‚Üí –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: $COMPOSE_CMD"

### 5. –ó–∞–ø—É—Å–∫ n8n –∏ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "‚Üí –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ n8n..."
$COMPOSE_CMD build
$COMPOSE_CMD up -d

### 6. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∑–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞
echo "‚Üí –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º Telegram-–±–æ—Ç–∞..."
npm install -g pm2
cd ./bot
npm install
pm2 start bot.js --name n8n-bot --env TG_BOT_TOKEN="$TG_BOT_TOKEN" --env TG_USER_ID="$TG_USER_ID"
pm2 save
pm2 startup systemd -u root --hp /root
cd ..

### 7. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ cron –¥–ª—è –±—ç–∫–∞–ø–∞
echo "‚Üí –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º cron –¥–ª—è –∞–≤—Ç–æ-–±—ç–∫–∞–ø–∞..."
cp ./backup_n8n.sh ./cron/backup_n8n.sh
chmod +x ./cron/backup_n8n.sh
echo "TG_BOT_TOKEN=\"$TG_BOT_TOKEN\"" > ./cron/.env
echo "TG_USER_ID=\"$TG_USER_ID\"" >> ./cron/.env
(crontab -l 2>/dev/null; echo "0 3 * * * /opt/n8n-install/cron/backup_n8n.sh") | crontab - || echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å cron-–∑–∞–¥–∞—á—É"

### 8. –§–∏–Ω–∞–ª
echo ""
echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "üåê –û—Ç–∫—Ä–æ–π: https://$DOMAIN"
echo "üì© –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram"
